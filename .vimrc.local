" Leader mappings
let mapleader = ","
nmap <leader>w :w!<cr>
nmap <leader>wa :wa!<cr>
nmap <leader>q :q<cr>
nmap <leader>zz ZZ
nmap <leader>nf :NERDTreeFind<cr>
nmap <leader>nh :nohl<cr>

"Split navigation
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-X> <C-W>x

" Split resizing
map + <C-W>+
map - <C-W>-
map = <C-W>=

" Split creation prefs
set splitbelow
set splitright

" Tab navigation
map <C-H> gT
map <C-L> gt

set pastetoggle=<F2>
nnoremap k gk
nnoremap j gj
nnoremap gk k
nnoremap gj j
imap <F1> ""

" Command to delete whitespace
:command! Rmsp %s/\s\+$//
nmap <leader>rs :Rmsp<cr>

" Commands to pull all Hex codes into TOCs and format them
:command! -nargs=1 Swatches %g/#\x\{3,6\};/co<args>
:command! -nargs=1 CleanHexes <args>s/^.*\(#\x\+;*$\)/ \* \1/g
:command! -nargs=1 TOC %g/\/\*\ *@/co<args>

" Function to convert -webkit-linear-gradient into all types of graidients
fu! Gradients(g_line)
  let full_line = getline(a:g_line)
  let moz_version = substitute(full_line, "-webkit", "-moz", "")
  let ms_version = substitute(full_line, "-webkit", "-ms", "")
  let o_version = substitute(full_line, "-webkit", "-o", "")
  let no_version = substitute(full_line, "-webkit-", "", "")
  call append(a:g_line, no_version)
  call append(a:g_line, o_version)
  call append(a:g_line, ms_version)
  call append(a:g_line, moz_version)
endfu

:command! -nargs=1 MakeGradients :call Gradients(<args>)

" Function to add browser prefixes to current line and append
fu! Prefixer(line)
  let full_line = getline(a:line)
  let moz_version = substitute(full_line, "^\( *\)\([a-z]\)", "\1-moz-\2", "")
  let ms_version = substitute(full_line, "^\( *\)\([a-z]\)", "\1-ms-\2", "")
  let o_version = substitute(full_line, "^\( *\)\([a-z]\)", "\1-o-\2", "")
  call append(a:line, o_version)
  call append(a:line, ms_version)
  call append(a:line, moz_version)
endfu

:command! -nargs=1 AddPrefixes :call Prefixer(<args>)
" Show Rake output in new window
:command! RunRake !Rake | mvim -c "set nomodified" -
"
" Show Ruby output in new window
:command! RunRuby :w !ruby % | mvim -c "set nomodified" -

" My colorz
colorscheme twilight
color twilight

:set hidden
let g:LustyExplorerSuppressRubyWarning = 1
set title

" Use Node.js for JavaScript interpretation
let $JS_CMD='node'

let g:HammerQuiet=1

set clipboard=unnamed

" FuzzyFinder
nmap ,b :FufBuffer<CR>

au BufRead,BufNewFile Capfile set filetype=ruby
au BufRead,BufNewFile Gemfile set filetype=ruby
nmap <C-t> :FufCoverageFile<CR>
let g:fuf_file_exclude='\v\~$|\.(o|exe|dll|bak|orig|swp|png|jpg|jpeg)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])'

imap <C-j> <Esc>
map <leader>fr :FufRenewCache<CR>
